2025-05-12T14:18:50.6275582Z ##[group]Run echo "============================================"
2025-05-12T14:18:50.6276064Z [36;1mecho "============================================"[0m
2025-05-12T14:18:50.6276398Z [36;1mecho "CONVERTING DRAW.IO FILES TO HTML AND SVG"[0m
2025-05-12T14:18:50.6276713Z [36;1mecho "============================================"[0m
2025-05-12T14:18:50.6276969Z [36;1m[0m
2025-05-12T14:18:50.6277167Z [36;1m# Ensure output directories exist[0m
2025-05-12T14:18:50.6277440Z [36;1mmkdir -p svg_files html_files[0m
2025-05-12T14:18:50.6277678Z [36;1m[0m
2025-05-12T14:18:50.6277873Z [36;1m# Create a simple converter script[0m
2025-05-12T14:18:50.6278155Z [36;1mcat > /tmp/convert-drawio.sh << 'EOL'[0m
2025-05-12T14:18:50.6278411Z [36;1m#!/bin/bash[0m
2025-05-12T14:18:50.6278605Z [36;1minput_file=$1[0m
2025-05-12T14:18:50.6278813Z [36;1moutput_file=$2[0m
2025-05-12T14:18:50.6279064Z [36;1mecho "Converting: $input_file to $output_file"[0m
2025-05-12T14:18:50.6279349Z [36;1m[0m
2025-05-12T14:18:50.6279836Z [36;1m# Try direct command first[0m
2025-05-12T14:18:50.6280148Z [36;1mif drawio -x -f svg -o "$output_file" "$input_file"; then[0m
2025-05-12T14:18:50.6280451Z [36;1m  exit 0[0m
2025-05-12T14:18:50.6280631Z [36;1mfi[0m
2025-05-12T14:18:50.6280796Z [36;1m[0m
2025-05-12T14:18:50.6280982Z [36;1m# Try with xvfb-run as fallback[0m
2025-05-12T14:18:50.6281605Z [36;1mxvfb-run --***-servernum --server-args="-screen 0 1280x1024x24" drawio -x -f svg -o "$output_file" "$input_file"[0m
2025-05-12T14:18:50.6282070Z [36;1mEOL[0m
2025-05-12T14:18:50.6282272Z [36;1mchmod +x /tmp/convert-drawio.sh[0m
2025-05-12T14:18:50.6282516Z [36;1m[0m
2025-05-12T14:18:50.6282696Z [36;1m# Track processed files[0m
2025-05-12T14:18:50.6282935Z [36;1m> /tmp/processed_files.txt[0m
2025-05-12T14:18:50.6283182Z [36;1m> /tmp/failed_files.txt[0m
2025-05-12T14:18:50.6283396Z [36;1m[0m
2025-05-12T14:18:50.6283628Z [36;1m# Find all .drawio files that changed in this commit[0m
2025-05-12T14:18:50.6284179Z [36;1mgit diff --name-only HEAD^ HEAD 2>/dev/null | grep -E "\.drawio$" > /tmp/changed_files.txt || echo "" > /tmp/changed_files.txt[0m
2025-05-12T14:18:50.6284691Z [36;1mif [ ! -s /tmp/changed_files.txt ]; then[0m
2025-05-12T14:18:50.6285024Z [36;1m  # If first commit or other issue, get all .drawio files[0m
2025-05-12T14:18:50.6285592Z [36;1m  git diff-tree --name-only --no-commit-id --root -r HEAD | grep -E "\.drawio$" > /tmp/changed_files.txt || echo "" > /tmp/changed_files.txt[0m
2025-05-12T14:18:50.6286085Z [36;1mfi[0m
2025-05-12T14:18:50.6286245Z [36;1m[0m
2025-05-12T14:18:50.6286425Z [36;1mecho "Files to process:"[0m
2025-05-12T14:18:50.6286668Z [36;1mcat /tmp/changed_files.txt[0m
2025-05-12T14:18:50.6286891Z [36;1m[0m
2025-05-12T14:18:50.6287070Z [36;1m# Process each changed file[0m
2025-05-12T14:18:50.6287346Z [36;1mwhile IFS= read -r file || [ -n "$file" ]; do[0m
2025-05-12T14:18:50.6287624Z [36;1m  if [ -f "$file" ]; then[0m
2025-05-12T14:18:50.6288053Z [36;1m    echo "Processing: $file"[0m
2025-05-12T14:18:50.6288280Z [36;1m    [0m
2025-05-12T14:18:50.6288474Z [36;1m    # Create output directories[0m
2025-05-12T14:18:50.6288740Z [36;1m    mkdir -p svg_files html_files[0m
2025-05-12T14:18:50.6288987Z [36;1m    [0m
2025-05-12T14:18:50.6289170Z [36;1m    # Get base name[0m
2025-05-12T14:18:50.6289399Z [36;1m    base=$(basename "$file" .drawio)[0m
2025-05-12T14:18:50.6289878Z [36;1m    output_svg="svg_files/${base}.svg"[0m
2025-05-12T14:18:50.6290168Z [36;1m    output_html="html_files/${base}.html"[0m
2025-05-12T14:18:50.6290422Z [36;1m    [0m
2025-05-12T14:18:50.6290604Z [36;1m    # Convert to SVG[0m
2025-05-12T14:18:50.6290866Z [36;1m    echo "Converting to SVG..."[0m
2025-05-12T14:18:50.6291179Z [36;1m    if /tmp/convert-drawio.sh "$file" "$output_svg"; then[0m
2025-05-12T14:18:50.6291548Z [36;1m      echo "✅ Successfully converted to SVG: $output_svg"[0m
2025-05-12T14:18:50.6291839Z [36;1m      [0m
2025-05-12T14:18:50.6292043Z [36;1m      # Create HTML wrapper[0m
2025-05-12T14:18:50.6292477Z [36;1m      echo "Creating HTML wrapper..."[0m
2025-05-12T14:18:50.6292746Z [36;1m      echo '<!DOCTYPE html>[0m
2025-05-12T14:18:50.6292982Z [36;1m<html lang="en">[0m
2025-05-12T14:18:50.6293190Z [36;1m<head>[0m
2025-05-12T14:18:50.6293383Z [36;1m  <meta charset="UTF-8">[0m
2025-05-12T14:18:50.6293619Z [36;1m  <title>'"$base"'</title>[0m
2025-05-12T14:18:50.6293844Z [36;1m  <style>[0m
2025-05-12T14:18:50.6294055Z [36;1m    body { margin: 0; padding: 0; }[0m
2025-05-12T14:18:50.6294401Z [36;1m    svg { max-width: 100%; height: ***; display: block; }[0m
2025-05-12T14:18:50.6294692Z [36;1m  </style>[0m
2025-05-12T14:18:50.6294878Z [36;1m</head>[0m
2025-05-12T14:18:50.6295071Z [36;1m<body>' > "$output_html"[0m
2025-05-12T14:18:50.6295324Z [36;1m      cat "$output_svg" >> "$output_html"[0m
2025-05-12T14:18:50.6295587Z [36;1m      echo '</body>[0m
2025-05-12T14:18:50.6295807Z [36;1m</html>' >> "$output_html"[0m
2025-05-12T14:18:50.6296038Z [36;1m      [0m
2025-05-12T14:18:50.6296245Z [36;1m      # Add simple changelog entry[0m
2025-05-12T14:18:50.6296731Z [36;1m      echo "$(date +"%d.%m.%Y"),$(date +"%H:%M:%S"),\"$base\",\"$file\",\"\",\"$(git log -1 --format="%s" HEAD)\",\"$(git log -1 --format="%h" HEAD)\"" >> html_files/CHANGELOG.csv[0m
2025-05-12T14:18:50.6297198Z [36;1m      [0m
2025-05-12T14:18:50.6297415Z [36;1m      echo "$file" >> /tmp/processed_files.txt[0m
2025-05-12T14:18:50.6297679Z [36;1m    else[0m
2025-05-12T14:18:50.6297883Z [36;1m      echo "❌ Failed to convert: $file"[0m
2025-05-12T14:18:50.6298170Z [36;1m      echo "$file" >> /tmp/failed_files.txt[0m
2025-05-12T14:18:50.6298423Z [36;1m      [0m
2025-05-12T14:18:50.6298659Z [36;1m      # Create a placeholder SVG for failed conversions[0m
2025-05-12T14:18:50.6299112Z [36;1m      echo '<svg xmlns="http://www.w3.org/2000/svg" width="640" height="480" viewBox="0 0 640 480">[0m
2025-05-12T14:18:50.6299761Z [36;1m        <rect width="100%" height="100%" fill="#ffffcc"/>[0m
2025-05-12T14:18:50.6300205Z [36;1m        <text x="10" y="20" font-family="Arial" font-size="16">Error: Failed to convert diagram</text>[0m
2025-05-12T14:18:50.6300730Z [36;1m        <text x="10" y="45" font-family="Arial" font-size="12">Please check the file and try again</text>[0m
2025-05-12T14:18:50.6301127Z [36;1m      </svg>' > "$output_svg"[0m
2025-05-12T14:18:50.6301359Z [36;1m      [0m
2025-05-12T14:18:50.6301560Z [36;1m      # Create an error HTML wrapper[0m
2025-05-12T14:18:50.6301823Z [36;1m      echo '<!DOCTYPE html>[0m
2025-05-12T14:18:50.6302057Z [36;1m<html lang="en">[0m
2025-05-12T14:18:50.6302259Z [36;1m<head>[0m
2025-05-12T14:18:50.6302439Z [36;1m  <meta charset="UTF-8">[0m
2025-05-12T14:18:50.6302712Z [36;1m  <title>'"$base"' (Conversion Failed)</title>[0m
2025-05-12T14:18:50.6302979Z [36;1m  <style>[0m
2025-05-12T14:18:50.6303190Z [36;1m    body { margin: 0; padding: 0; }[0m
2025-05-12T14:18:50.6303666Z [36;1m    svg { max-width: 100%; height: ***; display: block; }[0m
2025-05-12T14:18:50.6303997Z [36;1m    .error { color: red; padding: 10px; }[0m
2025-05-12T14:18:50.6304260Z [36;1m  </style>[0m
2025-05-12T14:18:50.6304448Z [36;1m</head>[0m
2025-05-12T14:18:50.6304623Z [36;1m<body>[0m
2025-05-12T14:18:50.6304969Z [36;1m  <div class="error">Conversion failed - please check the original file</div>' > "$output_html"[0m
2025-05-12T14:18:50.6305400Z [36;1m      cat "$output_svg" >> "$output_html"[0m
2025-05-12T14:18:50.6305657Z [36;1m      echo '</body>[0m
2025-05-12T14:18:50.6305880Z [36;1m</html>' >> "$output_html"[0m
2025-05-12T14:18:50.6306103Z [36;1m    fi[0m
2025-05-12T14:18:50.6306277Z [36;1m  else[0m
2025-05-12T14:18:50.6306473Z [36;1m    echo "⚠️ File not found: $file"[0m
2025-05-12T14:18:50.6306712Z [36;1m  fi[0m
2025-05-12T14:18:50.6306898Z [36;1mdone < /tmp/changed_files.txt[0m
2025-05-12T14:18:50.6307131Z [36;1m[0m
2025-05-12T14:18:50.6307319Z [36;1mecho "Process completed."[0m
2025-05-12T14:18:50.6307666Z [36;1mecho "Successful conversions: $(wc -l < /tmp/processed_files.txt)"[0m
2025-05-12T14:18:50.6308229Z [36;1mecho "Failed conversions: $(wc -l < /tmp/failed_files.txt)"[0m
2025-05-12T14:18:50.6333897Z shell: /usr/bin/bash -e {0}
2025-05-12T14:18:50.6334147Z ##[endgroup]
2025-05-12T14:18:50.6378349Z ============================================
2025-05-12T14:18:50.6378818Z CONVERTING DRAW.IO FILES TO HTML AND SVG
2025-05-12T14:18:50.6379263Z ============================================
2025-05-12T14:18:50.6435269Z Files to process:
2025-05-12T14:18:50.6443714Z drawio_files/19.drawio
2025-05-12T14:18:50.6446842Z Processing: drawio_files/19.drawio
2025-05-12T14:18:50.6470499Z Converting to SVG...
2025-05-12T14:18:50.6483972Z Converting: drawio_files/19.drawio to svg_files/19.svg
2025-05-12T14:18:51.2382240Z Checking for beta ***update feature for deb/rpm distributions
2025-05-12T14:18:51.2388160Z Found package-type: deb
2025-05-12T14:18:51.2414759Z [2583:0512/141851.241346:ERROR:ozone_platform_x11.cc(246)] Missing X server or $DISPLAY
2025-05-12T14:18:51.2415736Z [2583:0512/141851.241385:ERROR:env.cc(257)] The platform failed to initialize.  Exiting.
2025-05-12T14:18:52.8771301Z /tmp/convert-drawio.sh: line 9:  2583 Segmentation fault      (core dumped) drawio -x -f svg -o "$output_file" "$input_file"
2025-05-12T14:18:53.5844590Z Checking for beta ***update feature for deb/rpm distributions
2025-05-12T14:18:53.5852186Z Found package-type: deb
2025-05-12T14:18:53.6395103Z [2628:0512/141853.638844:ERROR:bus.cc(408)] Failed to connect to the bus: Could not parse server address: Unknown address type (examples of valid types are "tcp" and on UNIX "unix")
2025-05-12T14:18:53.6397721Z [2628:0512/141853.639585:ERROR:bus.cc(408)] Failed to connect to the bus: Could not parse server address: Unknown address type (examples of valid types are "tcp" and on UNIX "unix")
2025-05-12T14:18:53.6400979Z [2628:0512/141853.639600:ERROR:bus.cc(408)] Failed to connect to the bus: Could not parse server address: Unknown address type (examples of valid types are "tcp" and on UNIX "unix")
2025-05-12T14:18:53.6402817Z [2628:0512/141853.639607:ERROR:bus.cc(408)] Failed to connect to the bus: Could not parse server address: Unknown address type (examples of valid types are "tcp" and on UNIX "unix")
2025-05-12T14:18:53.6750022Z [2628:0512/141853.674644:ERROR:bus.cc(408)] Failed to connect to the bus: Could not parse server address: Unknown address type (examples of valid types are "tcp" and on UNIX "unix")
2025-05-12T14:18:53.6953877Z [2628:0512/141853.695198:ERROR:bus.cc(408)] Failed to connect to the bus: Could not parse server address: Unknown address type (examples of valid types are "tcp" and on UNIX "unix")
2025-05-12T14:18:53.7055813Z [2628:0512/141853.705028:ERROR:object_proxy.cc(576)] Failed to call method: org.freedesktop.DBus.NameHasOwner: object_path= /org/freedesktop/DBus: unknown error type: 
2025-05-12T14:18:53.7081346Z [2678:0512/141853.707773:ERROR:viz_main_impl.cc(183)] Exiting GPU process due to errors during initialization
2025-05-12T14:18:53.7827943Z [2710:0512/141853.782545:ERROR:viz_main_impl.cc(183)] Exiting GPU process due to errors during initialization
2025-05-12T14:18:53.9462257Z [2698:0512/141853.945389:ERROR:command_buffer_proxy_impl.cc(125)] ContextResult::kTransientFailure: Failed to send GpuControl.CreateCommandBuffer.
2025-05-12T14:18:54.2096926Z drawio_files/19.drawio -> svg_files/19.svg
2025-05-12T14:18:54.2520576Z ✅ Successfully converted to SVG: svg_files/19.svg
2025-05-12T14:18:54.2521197Z Creating HTML wrapper...
2025-05-12T14:18:54.2603419Z Process completed.
2025-05-12T14:18:54.2627119Z Successful conversions: 1
2025-05-12T14:18:54.2643266Z Failed conversions: 0
